---
import { twMerge } from 'tailwind-merge'
import PostLayout from '@layouts/PostLayout.astro'
import type { Frontmatter, Post } from '@interfaces/post'
import { fetchAndBuildPosts, getRelatedPosts } from '@utils/post-helpers'
import Posts from '@components/Posts.astro'
import Link from '@components/Link.astro'
import Aside from '@components/Aside.astro'
import PostHeader from '@components/PostHeader.astro'

export interface Props {
	post: Post
}

export async function getStaticPaths() {
	const rawPosts = await Astro.glob<Frontmatter>('../../data/posts/**/*.mdx')

	const posts = fetchAndBuildPosts(rawPosts)

	return posts.map(post => {
		return {
			params: { slug: post.frontmatter.slug },
			props: {
				post: {
					...post,
					frontmatter: {
						...post.frontmatter,
						relatedPosts: getRelatedPosts(post, posts),
					},
				},
			},
		}
	})
}

const { post } = Astro.props
---

<PostLayout post={post}>
	<Fragment slot='header'>
		<PostHeader {...post.frontmatter} />
	</Fragment>
	<Fragment slot='main'>
		<article class='prose-xl prose prose-invert max-w-none'>
			<post.Content />
		</article>
		<section
			class={twMerge(
				'flex items-center w-full md:max-w-lg md:mx-auto',
				post.frontmatter.previousPost && post.frontmatter.nextPost
					? 'justify-between'
					: post.frontmatter.nextPost
					? 'justify-end'
					: 'justify-start'
			)}
		>
			{
				post.frontmatter.previousPost && (
					<Link
						class='w-36 rounded-lg border py-2 text-center font-semibold transition-all duration-300 ease-in-out lg:hover:border-transparent lg:hover:bg-aura-purple lg:hover:text-aura-black'
						href={`/blog/${post.frontmatter.previousPost}`}
						label='Link to previous post.'
					>
						Previous
					</Link>
				)
			}
			{
				post.frontmatter.nextPost && (
					<Link
						class='w-36 rounded-lg border py-2 text-center font-semibold transition-all duration-300 ease-in-out lg:hover:border-transparent lg:hover:bg-aura-purple lg:hover:text-aura-black'
						href={`/blog/${post.frontmatter.nextPost}`}
						label='Link to next post.'
					>
						Next
					</Link>
				)
			}
		</section>
		{
			!!post.frontmatter.relatedPosts.length && (
				<section class='flex flex-col space-y-6'>
					<h2 class='text-center text-3xl font-medium leading-tight text-aura-purple'>
						Reltated Posts
					</h2>
					<Posts forRelatedPosts posts={post.frontmatter.relatedPosts} />
				</section>
			)
		}
	</Fragment>
	<Fragment slot='aside'>
		<Aside {...post.frontmatter} />
	</Fragment>
</PostLayout>
